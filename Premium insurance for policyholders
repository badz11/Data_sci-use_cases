echo "# R-use-cases-" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/badz11/R-use-cases-.git
git push -u origin master


getwd()
library(psych)
library(tidyverse)
library(knitr)
library(corrplot)
library(gridExtra)
insurance <- read.csv('C://Users/badal/Desktop/datset_/insurance.csv')
head(insurance)
describe(insurance)
str(insurance)
summary(insurance)
any(is.na(insurance))
insurance_boxplot <- insurance %>%select(c(1, 3)) %>% gather()
boxplot <- ggplot(insurance_boxplot, aes(x = key, y = value)) + labs(x = "variable", title = "Insurance Data Boxplot") + geom_boxplot(outlier.colour = "red",fill="white", outlier.shape = 2)
insurance_hist <- insurance %>% select(c(1, 3, 7)) %>% gather()
hist <- ggplot(data = insurance_hist, mapping = aes(x = value)) + geom_histogram(bins = 10, color="blue", fill="darkblue") + facet_wrap(~key, scales = 'free_x')
hist
insurance_bar <- insurance %>% select(c(2, 4:6)) %>% gather()
barchat <- ggplot(data = insurance_bar,mapping = aes(x = value), colorspaces)
+geom_bar(colour= "red" , fill= "darkred") +facet_wrap(~key, scales = 'free_x')
barchat
pairs.panels(insurance[c("age", "bmi", "children", "charges")])
Corr_ins <- mutate_all(insurance,funs(as.numeric))
corrplot(cor(Corr_ins), method = "number",type = "lower")
corp <- apply(Corr_ins[, -7], 2, function(x) cor.test(x, y=Corr_ins$charges)$p.value)
cor_table <- cor(Corr_ins[, -7], Corr_ins$charges)
kable(cbind(as.character(corp),cor_table),col.names = c("P value", "Correlation with dependent variable"))
model_1 <- lm(formula = charges ~ ., data = insurance)
summary(model_1)
model_2 <- lm(formula = charges ~ . -sex -region,data = insurance)
summary(model_2)
anova(model_2, model_1)
set.seed(1234) #setting seed to reproduce result of random sampling
train <- insurance %>% sample_frac(., size = 0.8, replace = F) 
test <- anti_join(insurance, train)
model_1 <- lm(formula = charges ~ .,data = train) 
predicted.charges <- predict(object =  model_1,newdata = test, type = "response")
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%mutate(error = results.df$actuals - results.df$predicted) %>% round(., 2)
results.df <- results.df %>%mutate( error_percent =paste0(round(results.df$error/results.df$actuals*100,2),"%"))
kable(head(results.df))
sprintf("The Average percent error is: %s%%",round(mean(results.df$error/results.df$actuals*100), 2))
